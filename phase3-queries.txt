Information about rooms:
	SELECT * FROM room NATURAL JOIN isIn WHERE (roomNum=\%(roomNum)s AND 
		building=%(building)s); 

Information about equipment:
	SELECT * FROM isIn NATURAL JOIN room WHERE equipname=%(equipment)s; 

	SELECT * FROM uses NATURAL JOIN event WHERE equipname=%(equipment)s; 

Information about clubs:
	SELECT * FROM club WHERE cEmail=%(club)s;

	SELECT * FROM runBy NATURAL JOIN event WHERE cEmail=%(club)s;

Information about events:
	SELECT * FROM event WHERE EID=%(event)i;

	SELECT * FROM club NATURAL JOIN runBy WHERE EID=%(event)i;

	SELECT * FROM comments WHERE EID=%(event)i;

	SELECT * FROM uses WHERE EID=%(event)i;

	SELECT count() AS conflicts, r1.* 
	FROM reservation AS r1, reservation AS r2 
	WHERE (r1.startTime, r1.endTime) OVERLAPS (r2.startTime, r2.endTime)
		AND r1.EID=%(event)i AND r2.EID!=%(event)i 
		GROUP BY r1.RID; 
 
Information about clubs:
	SELECT * 
	FROM users LEFT JOIN student ON email=sEmail LEFT JOIN admin ON
		email=aEmail 
	WHERE (email=%(user)s; 

	SELECT * FROM memberOf NATURAL JOIN group WHERE email=%(user)s; 

	SELECT event.* FROM reservation NATURAL JOIN event WHERE sEmail=%(user)s;

Information about reservations:
	SELECT * FROM reservation NATURAL JOIN event WHERE RID=%(id)s;

	SELECT *
	FROM reservation 
	WHERE (%(start)s, %(end)s) OVERLAPS (startTime, endTime)
		AND RID!=%(id)i;


Select all unapproved reservations:
	SELECT * FROM reservation NATURAL JOIN event WHERE aEmail=NULL AND startTime >
		now() ORDER BY startTime; 

Select all overlapping reservations:
	SELECT * 
	FROM reservation AS r1, reservation AS r2
	WHERE (r1.startTime, r1.endTime) OVERLAPS (r2.startTime, r2.endTime) AND r1.ID < r2.ID 
		ORDER BY r1.startTime; 

Search for room based on date and time:
	SELECT room.* FROM room 
	WHERE NOT EXISTS 
		(SELECT * 
		FROM reservation AS r 
		WHERE r.roomnum = roomnum AND r.building = building AND (%(start)s, %(end)s)
			OVERLAPS (r.startTime, r.endTime)); 

Search for room based on Equipment
	CREATE TEMPORARY TABLE search_546534 (equipname VARCHAR(32)) ON COMMIT DROP;
	INSERT INTO search_546534 VALUES (%(val)s), (%(val)s);
	SELECT * 
	FROM room 
	WHERE NOT EXIST 
		((SELECT * FROM search_546534) DIFFERENCE 
			(SELECT equipname 
			FROM isIN 
			WHERE roomNum=%(roomNum)s and building=%(building)s));\\

Search for room based on occupancy: 
	SELECT room.* 
	FROM room 
	WHERE %(min)i <= occupancy AND occupancy <= %(max)i; 

%statistic pages:
	%most used rooms
	%favourite events
	%most common majors for running events



